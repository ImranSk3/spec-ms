swagger: "2.0"
info:
  version: "1.0.0"
  title: 'CQUBE'

basePath: "/v0"

tags:
  - name: "spec"
  - name: "ingestion"

schemes:
  - "https"
  - "http"

paths:
  /spec/event:
    post:
      tags:
        - "spec"
      summary: "Create a new event Specification"
      description: "Add new event Specification"
      operationId: "eventSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            example:
              program: student-attendance
              input:
                type: object
                properties:
                  date:
                    type: string
                    shouldNotNull: true
                    format: date
                  school_id:
                    type: string
                    shouldNotNull: true
                  grade_id:
                    type: string
                    shouldNotNull: true
                  district_id:
                    type: string
                    shouldNotNull: true
                  block_id:
                    type: string
                    shouldNotNull: true
                  cluster_id:
                    type: string
                    shouldNotNull: true
                  schoolcategory_id:
                    type: string
                    shouldNotNull: true
                  gender:
                    type: string
                    shouldNotNull: true
                  students_attendance_marked:
                    type: string
                    shouldNotNull: true
                  students_marked_present:
                    type: string
                    shouldNotNull: true
                  total_students:
                    type: string
                    shouldNotNull: true
                  teachers_marked:
                    type: string
                    shouldNotNull: true
                  teachers_marked_present:
                    type: string
                    shouldNotNull: true
                  total_teachers:
                    type: string
                    shouldNotNull: true

      responses:
        200:
          description: "Event Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Event Spec Created Successfully"
              event_name:
                type: "string"
                example: "students_attendance"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/dimension:
    post:
      tags:
        - "spec"
      summary: "Create a new dimension Specification"
      description: "Add new dimension Specification"
      operationId: "dimensionSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            example: {
            "ingestion_type": "dimension",
    "dimension_name": "school_details",
    "input": {
        "type": "object",
        "properties": {
            "dimension_name": {
                "type": "string"
            },
            "dimension": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "grade": {
                            "type": "number",
                            "shouldnotnull": true,
                            "minimum": 1,
                            "maximum": 12
                        },
                        "school_id": {
                            "type": "number",
                            "shouldnotnull": true,
                            "minimum": 1000000000,
                            "maximum": 9999999999
                        },
                        "school_name": {
                            "type": "string",
                            "shouldnotnull": true
                        },
                        "school_type": {
                            "type": "string",
                            "shouldnotnull": true
                        },
                        "school_category": {
                            "type": "string",
                            "shouldnotnull": true
                        },
                        "cluster_id": {
                            "type": "number",
                            "shouldnotnull": true,
                            "minimum": 100000000,
                            "maximum": 999999999
                        },
                        "cluster_name": {
                            "type": "string",
                            "shouldnotnull": true
                        },
                        "block_id": {
                            "type": "number",
                            "shouldnotnull": true,
                            "minimum": 10000,
                            "maximum": 99999
                        },
                        "block_name": {
                            "type": "string",
                            "shouldnotnull": true
                        },
                        "district_id": {
                            "type": "number",
                            "shouldnotnull": true,
                            "minimum": 100,
                            "maximum": 999
                        },
                        "district_name": {
                            "type": "string",
                            "shouldnotnull": true
                        },
                        "state_id": {
                            "type": "number",
                            "shouldnotnull": true,
                            "minimum": 1,
                            "maximum": 99
                        },
                        "state_name": {
                            "type": "string",
                            "shouldnotnull": true
                        }
                    },
                    "required": [
                        "grade",
                        "school_id",
                        "school_name",
                        "school_type",
                        "school_category",
                        "cluster_id",
                        "cluster_name",
                        "block_id",
                        "block_name",
                        "district_id",
                        "district_name",
                        "state_id",
                        "state_name"
                    ]
                }
            },
            "target_table": {
                "type": "object",
                "shouldnotnull": true,
                "properties": {
                    "ingestion.school_details": {
                        "type": "string"
                    }
                }
            }
        },
        "required": [
            "dimension_name",
            "dimension"
        ]
    }
}

      responses:
        200:
          description: "Dimension Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dimension Spec Created Successfully"
              pid:
                type: "integer"
                example: 4
              dimension_name:
                type: "string"
                example: "school_details"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/dataset:
    post:
      tags:
        - "spec"
      summary: "Create a new dataset Specification"
      description: "Add new dataset Specification"
      operationId: "datasetSpecification"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
           example: {
            "ingestion_type": "dataset",
    "dataset_name": "students_attendance_compliance_by_school",
    "input": {
        "type": "object",
        "properties": {
            "dataset_name": {
                "type": "string"
            },
            "dimensions": {
                "type": "object",
                "properties": {
                    "table": "ingestion.dimension_school",
                    "column": [
                        "school_id"
                    ],
                    "merge_on_col": "school_id"
                }
            },
            "dataset": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "shouldnotnull": true,
                                    "format": "date"
                                },
                                "school_id": {
                                    "type": "integer",
                                    "shouldnotnull": true,
                                    "minimum": 1000000000,
                                    "maximum": 9999999999
                                },
                                "sum_students_attendance_marked": {
                                    "type": "integer",
                                    "shouldnotnull": true
                                },
                                "sum_total_students": {
                                    "type": "integer",
                                    "shouldnotnull": true
                                },
                                "percentage": {
                                    "type": "number",
                                    "shouldnotnull": true
                                }
                            },
                            "required": [
                                "date",
                                "school_id",
                                "sum_students_attendance_marked",
                                "sum_total_students",
                                "percentage"
                            ]
                        }
                    },
                    "group_by": [
                        "date",
                        "school_id"
                    ],
                    "aggregate": {
                        "type": "object",
                        "properties": {
                            "function": [
                                "sum"
                            ],
                            "target_table": "ingestion.SAC_students_attendance_compliance_by_school",
                            "numerator_col": "students_attendance_marked",
                            "denominator_col": "total_students",
                            "update_cols": [
                                "sum_students_attendance_marked",
                                "sum_total_students",
                                "percentage"
                            ],
                            "columns": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "column": [
                                            "students_attendance_marked",
                                            "total_students"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "function",
                                "target_table",
                                "update_cols",
                                "columns"
                            ]
                        }
                    },
                    "required": [
                        "items"
                    ]
                }
            },
            "required": [
                "dataset_name",
                "dataset"
            ]
        }
    }
}
      responses:
        200:
          description: "Dataset Spec Created Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dataset Spec Created Successfully"
              pid:
                type: "integer"
                example: 3
              dataset_name:
                type: "string"
                example: "students_attendance_compliance_by_school"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/schedule:
    post:
      tags:
        - "spec"
      summary: "Update a Schedule"
      description: "Update a schedule"
      operationId: "updateSchedule"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              processor_group_name:
                type: "string"
                example: "Plugin Student Attendance aws"
              scheduled_at:
                type: "string"
                example: "0 0/1 * 1/1 * ? *"
      responses:
        200:
          description: "Successfully updated the schedule"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Successfully updated the schedule"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /spec/grammar:
    get:
      tags:
        - "spec"
      summary: ""
      description: "Create a schedule"
      operationId: "Get spec"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "grammar_type"
          type: string
          required: true
        - in: "query"
          name: "grammar_name"
          type: string
          required: true




      responses:
        200:
          description: "Grammar"
          schema:
            type: object
            example:
              schema:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                    unique: true
                  school_id:
                    type: string
                    unique: true
                  students_attendance_marked:
                    type: integer
                    unique: true






        400:
          description: "No records found"
          schema:
            $ref: "#/definitions/generic_error"


  /ingestion/event:
    post:
      tags:
        - "ingestion"
      summary: "Add Event into a CSV"
      description: "Add event"
      operationId: "addEvent"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              event_name:
                type: "string"
                example: "students_attendance"
              event:
                type: "array"
                items:
                  type: "object"
                  properties:
                    date:
                      type: "string"
                      example: "2022-06-12"
                    school_id:
                      type: "number"
                      example: 1234567891
                    grade:
                      type: "number"
                      example: 1
                    gender:
                      type: "string"
                      example: "male"
                    total_students:
                      type: "number"
                      example: 10
                    students_attendance_marked:
                      type: "number"
                      example: 8
                    students_attendance_present:
                      type: "number"
                      example: 2
      responses:
        200:
          description: "Event Added Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Event Added Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/dimension:
    post:
      tags:
        - "ingestion"
      summary: "Add dimension into CSV"
      description: "Add dimension"
      operationId: "addDimension"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              dimension_name:
                type: "string"
                example: "school_details"
              dimension:
                type: "array"
                items:
                  type: "object"
                  properties:
                    grade:
                      type: "number"
                      example: 1
                    school_id:
                      type: "number"
                      example: 2402121120
                    school_name:
                      type: "string"
                      example: "Tirthgam Pri. Sch"
                    school_type:
                      type: "string"
                      example: "rural"
                    school_category:
                      type: "string"
                      example: "primary"
                    cluster_id:
                      type: "number"
                      example: 240212111
                    cluster_name:
                      type: "string"
                      example: "Sapreda"
                    block_id:
                      type: "number"
                      example: 24021
                    block_name:
                      type: "string"
                      example: "Vav"
                    district_id:
                      type: "number"
                      example: 240
                    district_name:
                      type: "string"
                      example: "Banaskantha"
                    state_id:
                      type: "number"
                      example: 1
                    state_name:
                      type: "string"
                      example: "UP"
      responses:
        200:
          description: "Dimension Added Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dimension Added Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/dataset:
    post:
      tags:
        - "ingestion"
      summary: "Add dataset"
      description: "Add dataset"
      operationId: "addDataset"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              dataset_name:
                type: "string"
                example: "students_attendance_compliance_by_school"
              dataset:
                  type: "object"
                  properties:
                    items:
                      type: "array"
                      items:
                        type: "object"
                        properties:
                          date:
                            type: "string"
                            example: 2022-12-01
                          school_id:
                            type: "number"
                            example: 1
                          grade:
                            type: "number"
                            example: 1
                          sum_students_attendance_marked:
                            type: "number"
                            example: 5
                          sum_total_students:
                            type: "number"
                            example: 10
                          percentage:
                            type: "number"
                            example: 50
      responses:
        200:
          description: "Dataset Added Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Dataset Added Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/pipeline:
    post:
      tags:
        - "ingestion"
      summary: "Trigger the pipeline"
      description: "Trigger the pipeline"
      operationId: "triggerPipeline"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: "object"
            properties:
              pipeline_name:
                type: "string"
                example: "students_attendance_compliance_by_school"
      responses:
        200:
          description: "Processor Group Running Successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Processor Group Running Successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/new_programs:
    post:
      tags:
        - "ingestion"
      summary: "CSV Import"
      description: "CSV Import"
      operationId: "csvImport"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: "formData"
          name: "body"
          type: file
          required: true
        - in: "formData"
          name: "ingestion_type"
          type: string
          required: true
        - in: "formData"
          name: "ingestion_name"
          type: string
          required: true

      responses:
        200:
          description: "File is being processed"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "File is being processed"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/file-status:
    get:
      tags:
        - "ingestion"
      summary: "Get the status of file"
      description: "Get the status of file"
      operationId: "getFileStatus"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "filename"
          type: string
          required: true
        - in: "query"
          name: "ingestion_type"
          type: string
          required: true
        - in: "query"
          name: "ingestion_name"
          type: string
          required: true
      responses:
        200:
          description: "Get the file status"
          schema:
            type: "object"
            properties:
             response:
                type: "array"
                items:
                  type: "object"
                  properties:
                    file_status:
                      type: "string"
                      example: uploaded
                    pid:
                      type: "string"
                      example: 1
                    created_at:
                      type: "string"
                      example: "2023-01-27 18:18:08.007215"
                    total_data_count:
                      type: "integer"
                      example: 2000
                    processed_data_count:
                      type: "integer"
                      example: 1199
                    error_data_count:
                      type: "integer"
                      example: 1
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"

  /ingestion/national_programs:
    post:
      tags:
        - "ingestion"
      summary: "CSV emission"
      description: "CSV emission"
      operationId: "emission"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - in: "formData"
          name: "body"
          type: file
          required: true


      responses:
        200:
          description: "File uploaded successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "File uploaded successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"
  /ingestion/v4-data-emission:
    get:
      tags:
        - "ingestion"
      summary: "V4 data emission"
      description: "V4 data emission"
      operationId: "V4emission"
      consumes:
        - "multipart/form-data"
      produces:
        - "application/json"
      responses:
        200:
          description: "Files uploaded successfully"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "Files uploaded successfully"
        400:
          description: "Something went wrong"
          schema:
            $ref: "#/definitions/generic_error"

definitions:
  generic_error:
      type: "object"
      properties:
        message:
          type: "string"
          example: "Invalid Input"